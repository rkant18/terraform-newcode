trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
  - stage: TerraformInit
    displayName: TerraformInit
    jobs:
     - job: job1
       steps:
       - task: TerraformTaskV4@4
         displayName: TerraformInitTask
         inputs:
           provider: 'azurerm'
           command: 'init'
           workingDirectory: 'Env'
           backendServiceArm: 'Azure-conn-service'
           backendAzureRmResourceGroupName: 'bipin-rg'
           backendAzureRmStorageAccountName: 'autostore123'
           backendAzureRmContainerName: 'autostate'
           backendAzureRmKey: 'new.tfstate'

  - stage: TerraformPlan
    displayName: TerraformPlanStage
    jobs:
     - job: Plan
       steps:
       - task: TerraformTaskV4@4
         displayName: TerraformPlanTaskwithInit
         inputs:
           provider: 'azurerm'
           command: 'init'
           workingDirectory: 'Env'
           backendServiceArm: 'Azure-conn-service'
           backendAzureRmResourceGroupName: 'bipin-rg'
           backendAzureRmStorageAccountName: 'autostore123'
           backendAzureRmContainerName: 'autostate'
           backendAzureRmKey: 'new.tfstate'
       - task: TerraformTaskV4@4
         inputs:
           provider: 'azurerm'
           command: 'plan'
           workingDirectory: 'Env'
           environmentServiceNameAzureRM: 'Azure-conn-service'
  - stage:
    displayName: validation
    pool: server
    jobs:
    - job: Manualvalidation
      steps:
      - task: ManualIntervention@8
        inputs:
          instructions: 'check and review'
  - stage: 
    displayName: Apply 
    jobs:
      - job: Applychange
        steps:
        - task: TerraformTaskV4@4
          inputs:
           provider: 'azurerm'
           command: 'apply'
           workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-newcode/Env'

      
